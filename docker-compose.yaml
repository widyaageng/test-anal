services:
  # postgres:
  #   image: postgres:16-alpine
  #   restart: always
  #   volumes:
  #     - ./postgres:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: postgrespw
  #   ports:
  #     - "5433:5432"
  #   networks:
  #     - otel
  otel-collector:
    image: otel/opentelemetry-collector:0.78.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector/otel-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter
      - "13133:13133" # health_check extension
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
    networks:
      - otel
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.33.4
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus/etc:/etc/prometheus
      - ./prometheus/prom_data:/prometheus
    networks:
      - otel
  promtail:
    image: grafana/promtail:2.4.2-amd64
    deploy:
      replicas: 1
    volumes:
      - ./promtail/logs:/var/log
      - ./promtail/etc:/etc/promtail
      - ./promtail/etc/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - otel
  loki:
    image: grafana/loki:2.9.2-amd64
    volumes:
      - ./loki/etc:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - otel
  grafana:
    image: grafana/grafana:10.2.1-ubuntu
    container_name: grafana
    ports:
      - 3002:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/var/lib:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - otel
  open-webui:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
    container_name: open-webui
    volumes:
      - ./open-webui:/app/backend/data
    ports:
      - ${OPEN_WEBUI_PORT-8088}:8080
    environment:
      - ENABLE_OTEL=true
      - ENABLE_OTEL_METRICS=true
      - OTEL_EXPORTER_OTLP_INSECURE=true # Use insecure connection for OTLP, remove in production
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_BASIC_AUTH_USERNAME=root@example.com
      - OTEL_BASIC_AUTH_PASSWORD=SfiM69KILkDkfEsk
      - OTEL_SERVICE_NAME=open-webui
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
    - otel
  vector:
    build:
      context: ./vectordotdev
      dockerfile: Dockerfile
    container_name: vector
    volumes:
      - ./vectordotdev/var/vector/data:/var/vector/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./vectordotdev/vector.yaml:/etc/vector/vector.yaml:ro
      - ./vectordotdev/appvector.yaml:/etc/vector/appvector.yaml:ro
    ports:
      - "8080:8080"   # Prometheus metrics
      - "8686:8686"   # Vector API
    environment:
    - RUST_BACKTRACE=full
    networks:
    - otel
    restart: unless-stopped
  
  fastapi-app:
    build:
      context: ./fastapiapp
      dockerfile: Dockerfile
    container_name: fastapi-app
    ports:
      - "8000:8000"
    networks:
      - otel
    restart: unless-stopped
    labels:
      - "logging=promtail"

  loadtest:
    build:
      context: ./loadtest
      dockerfile: Dockerfile
    container_name: loadtest
    networks:
      - otel
    restart: unless-stopped
    depends_on:
      - fastapi-app
    labels:
      - "logging=promtail"

volumes:
  backup:
networks:
  otel:
    driver: bridge
